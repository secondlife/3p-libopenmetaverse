#!/usr/bin/env python3

import argparse
import shutil
import os
import subprocess
import glob
from pathlib import Path

ROOT = Path(__file__).parent.resolve()
DIST = ROOT / "dist"
MANIFEST = [
    "bin/OpenMetaverse*.dll",
    "bin/log4net.dll",
    "bin/XMLRPC.dll",
]


def configure_main():
    subprocess.run(["./runprebuild.sh"], check=True)


def build_main():
    subprocess.run(["xbuild", "OpenMetaverse.sln"], check=True)

    # Create package structure
    os.makedirs(DIST / "mono/libopenmetaverse", exist_ok=True)
    os.makedirs(DIST / "LICENSES", exist_ok=True)

    # Copy libraries
    for p in MANIFEST:
        for f in glob.glob(str(ROOT / "libopenmetaverse" / p)):
            shutil.copy(f, DIST / "mono/libopenmetaverse/")

    # Copy license
    shutil.copy(ROOT / "libopenmetaverse/LICENSE.txt", DIST / "LICENSES/libopenmetaverse.txt")


def main(argv=None):
    parser = argparse.ArgumentParser(description="Build and bottle libopenmetaverse as an autobuild package")

    subparsers = parser.add_subparsers()
    subparsers.required = True

    configure = subparsers.add_parser("configure", help="run dotnet restore")
    configure.set_defaults(fn=configure_main)

    build = subparsers.add_parser("build", help="build libopenmetaverse")
    build.set_defaults(fn=build_main)

    args = parser.parse_args(argv)

    os.chdir(ROOT / "libopenmetaverse")
    args.fn()


if __name__ == "__main__":
    main()
